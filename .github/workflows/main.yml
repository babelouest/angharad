# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt-get update
          sudo apt-get install -y libconfig-dev libsystemd-dev libjansson-dev libcurl4-gnutls-dev libmicrohttpd-dev libsqlite3-dev sqlite3 default-mysql-client default-libmysqlclient-dev cmake pkg-config check libsubunit-dev cppcheck gnutls-bin libopenzwave1.5-dev libmpdclient-dev
      - name: cppcheck
        run: cppcheck --force --enable=warning,missingInclude --error-exitcode=1 src/
      - name: build
        run: |
          mkdir build
          cd build
          cmake -DBUILD_IDWCC=OFF -DWITH_MOCKSERVICE=ON -DWITH_MOCKDEV=ON -DBUILD_TESTING=ON -DWITH_PGSQL=OFF -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib ..
          make
          sudo make install
          rnbyc -j -g ECDSA256 -x -o ../private-test.jwks -p ../public-test.jwks
          sqlite3 /tmp/angharad.db < ../docs/angharad.sqlite3.sql
          angharad -c ../test/angharad-ci.conf &
          export G_PID=$!
          make test || (cat Testing/Temporary/LastTest.log && cat /tmp/angharad.log && false)
          kill $G_PID
